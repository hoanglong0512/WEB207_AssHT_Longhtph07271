{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\ReactJs\\\\longhtph07271_Project\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Routers from './routers';\nimport apiProducts from './api/productApi';\nimport apiCategories from './api/categoriesApi';\nimport apiBlog from './api/blogApi';\nimport apiContact from './api/contactApi';\nimport swal from 'sweetalert';\n\nfunction App() {\n  // admin\n  const [products, setProducts] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [blog, setBlog] = useState([]);\n  const [contact, setContact] = useState([]); // client\n\n  const [cart, setCart] = useState([]); // get Contact\n\n  useEffect(() => {\n    const getContact = async () => {\n      try {\n        const {\n          data\n        } = await apiContact.getAll();\n        setContact(data);\n      } catch (error) {\n        console.log('failed to request API: ', error);\n      }\n    };\n\n    getContact();\n  }, []); // xóa Contact\n\n  const onRemoveContact = async id => {\n    try {\n      const {\n        data\n      } = await apiContact.remove(id);\n      const newContact = contact.filter(item => item.id !== id);\n      swal(\"Thông Báo\", \"Xóa Contact Thành Công!\", \"success\");\n      setContact(newContact);\n    } catch (error) {\n      console.log('failed to request API: ', error);\n    }\n  }; // list Blog\n\n\n  useEffect(() => {\n    const getBlog = async () => {\n      try {\n        const {\n          data\n        } = await apiBlog.getAll();\n        setBlog(data);\n      } catch (error) {\n        console.log('failed to request API: ', error);\n      }\n    };\n\n    getBlog();\n  }, []); // add Blog\n\n  const AddNewBlog = async newBlog => {\n    try {\n      const {\n        data\n      } = await apiBlog.create(newBlog);\n      const blogNew = {\n        id: data.id,\n        title: data.title,\n        image: data.image,\n        by: data.by,\n        short_desc: data.short_desc,\n        content: data.content\n      };\n      setBlog([...data]);\n    } catch (error) {\n      console.log('failed to request API: ', error);\n    }\n  }; // List categories\n\n\n  useEffect(() => {\n    const getCategories = async () => {\n      try {\n        const {\n          data\n        } = await apiCategories.getAll();\n        setCategories(data);\n      } catch (error) {\n        console.log('failed to request API: ', error);\n      }\n    };\n\n    getCategories();\n  }, []); // Thêm Danh Mục\n\n  const onHandleAddCategory = async category => {\n    try {\n      const {\n        data\n      } = await apiCategories.create(category);\n      const obj = {\n        id: data.id,\n        name: data.name,\n        description: data.description,\n        show_menu: data.show_menu\n      };\n      setCategories([...categories, obj]);\n    } catch (error) {\n      console.log('failed to request API: ', error);\n    }\n  }; // Xóa danh mục\n\n\n  const onHandleRemoveCate = async id => {\n    try {\n      const {\n        data\n      } = await apiCategories.remove(id);\n      console.log(categories);\n      console.log(\"new\");\n      const newCategories = categories.filter(category => category.id !== id);\n      setCategories(newCategories);\n      console.log(newCategories);\n    } catch (error) {\n      console.log('failed to request API: ', error);\n    }\n  }; // Cập nhật danh mục \n\n\n  const onHandleUpdateCate = (id, updateCategory) => {\n    const newCategories = categories.map(category => category.id == id ? updateCategory : category);\n    apiCategories.update(id, updateCategory);\n    setCategories(newCategories);\n  }; // Danh sách sản phẩm\n\n\n  useEffect(() => {\n    const getProducts = async () => {\n      try {\n        const {\n          data\n        } = await apiProducts.getAll();\n        setProducts(data);\n      } catch (error) {\n        console.log('failed to request API: ', error);\n      }\n    };\n\n    getProducts();\n  }, []); // Xóa sản phẩm\n\n  const onHandleRemove = async id => {\n    try {\n      const {\n        data\n      } = await apiProducts.remove(id);\n      console.log(id);\n      const newProducts = products.filter(product => product.id !== id);\n      console.log(newProducts);\n      setProducts(newProducts);\n      console.log(\"new\");\n      console.log(products);\n    } catch (error) {\n      console.log('failed to request API: ', error);\n    }\n  }; // Thêm sản phẩm\n\n\n  const onHandleAdd = async product => {\n    try {\n      const {\n        data\n      } = await apiProducts.create(product);\n      const obj = {\n        id: data.id,\n        name: data.name,\n        cate_id: data.cate_id,\n        image: data.image,\n        short_desc: data.short_desc,\n        price: data.price,\n        price_sale: data.price_sale,\n        status: data.status,\n        detail: data.detail\n      };\n      setProducts([...products, obj]);\n    } catch (error) {\n      console.log('failed to request API: ', error);\n    }\n  }; // Cập nhật product \n\n\n  const onHandleUpdate = (id, updateProduct) => {\n    const newProducts = products.map(product => product.id == id ? updateProduct : product);\n    apiProducts.update(id, updateProduct);\n    setProducts(newProducts);\n  }; // addToCart\n\n\n  const AddToCart = (id, quantity = 1) => {\n    const check = cart.every(item => {\n      return item.id !== id;\n    });\n\n    if (check) {\n      const dataCart = products.find(product => product.id == id);\n      dataCart.quantity = quantity;\n      const newCart = [...cart, dataCart];\n      setCart(newCart);\n      swal(\"Thông Báo\", \"Thêm Sản Phẩm Vào Giỏ Hàng Thành Công!\", \"success\");\n      localStorage[\"shopping-cart-items\"] = JSON.stringify(newCart);\n    } else {\n      cart.forEach(element => {\n        if (element.id == id) {\n          element.quantity++;\n        }\n      });\n      setCart(cart);\n      swal(\"Thông Báo\", \"Cộng Thêm Số Lượng Sản Phẩm Vào Giỏ Hàng Thành Công!\", \"success\");\n      localStorage[\"shopping-cart-items\"] = JSON.stringify(cart);\n    }\n  }; // list Cart\n\n\n  useEffect(() => {\n    let shoppingCartItems = [];\n\n    if (localStorage[\"shopping-cart-items\"] != null) {\n      shoppingCartItems = JSON.parse(localStorage[\"shopping-cart-items\"].toString());\n    }\n\n    setCart(shoppingCartItems);\n  }, []); // Xóa Cart \n\n  const RemoveCart = id => {\n    cart.forEach((element, index) => {\n      if (element.id == id) {\n        cart.splice(index, 1);\n      }\n    });\n    setCart([...cart]);\n    swal(\"Thông Báo\", \"Xóa Sản Phẩm Khỏi Giỏ Hàng Thành Công!\", \"success\");\n    localStorage[\"shopping-cart-items\"] = JSON.stringify(cart);\n  }; // updateCart\n\n\n  const onUpcart = id => {\n    cart.forEach(item => {\n      if (item.id == id) {\n        item.quantity++;\n      }\n    });\n    setCart([...cart]);\n    localStorage[\"shopping-cart-items\"] = JSON.stringify(cart);\n  };\n\n  const onDownUpdate = id => {\n    cart.forEach(item => {\n      if (item.quantity == 1) {} else if (item.id == id) {\n        item.quantity--;\n      }\n    });\n    setCart([...cart]);\n    localStorage[\"shopping-cart-items\"] = JSON.stringify(cart);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Routers // products\n  , {\n    products: products,\n    onRemove: onHandleRemove,\n    onAdd: onHandleAdd,\n    onUpdate: onHandleUpdate // categories\n    ,\n    categories: categories,\n    onAddCate: onHandleAddCategory,\n    onRemoveCate: onHandleRemoveCate,\n    onUpdateCate: onHandleUpdateCate,\n    AddCart: AddToCart,\n    dataCart: cart,\n    RemoveCart: RemoveCart,\n    onHandleDown: onDownUpdate,\n    onHandleUp: onUpcart,\n    blog: blog,\n    contact: contact,\n    onRemoveContact: onRemoveContact,\n    onAddBlog: AddNewBlog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/ReactJs/longhtph07271_Project/src/App.js"],"names":["React","useState","useEffect","Routers","apiProducts","apiCategories","apiBlog","apiContact","swal","App","products","setProducts","categories","setCategories","blog","setBlog","contact","setContact","cart","setCart","getContact","data","getAll","error","console","log","onRemoveContact","id","remove","newContact","filter","item","getBlog","AddNewBlog","newBlog","create","blogNew","title","image","by","short_desc","content","getCategories","onHandleAddCategory","category","obj","name","description","show_menu","onHandleRemoveCate","newCategories","onHandleUpdateCate","updateCategory","map","update","getProducts","onHandleRemove","newProducts","product","onHandleAdd","cate_id","price","price_sale","status","detail","onHandleUpdate","updateProduct","AddToCart","quantity","check","every","dataCart","find","newCart","localStorage","JSON","stringify","forEach","element","shoppingCartItems","parse","toString","RemoveCart","index","splice","onUpcart","onDownUpdate"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Routers from './routers';\nimport apiProducts from './api/productApi';\nimport apiCategories from './api/categoriesApi';\nimport apiBlog from './api/blogApi';\nimport apiContact from './api/contactApi';\nimport swal from 'sweetalert';\nfunction App() {\n  // admin\n  const [products, setProducts] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [blog, setBlog] = useState([]);\n  const [contact, setContact] = useState([]);\n  // client\n  const [cart, setCart] = useState([]);\n  // get Contact\n  useEffect(() => {\n    const getContact = async () => {\n      try {\n        const { data } = await apiContact.getAll();\n        setContact(data);\n      } catch (error) {\n        console.log('failed to request API: ', error)\n      }\n    }\n    getContact();\n  }, [])\n\n  // xóa Contact\n\n  const onRemoveContact = async (id) => {\n    try {\n      const { data } = await apiContact.remove(id);\n      const newContact = contact.filter(item => item.id !== id);\n      swal(\"Thông Báo\", \"Xóa Contact Thành Công!\", \"success\");\n      setContact(newContact);\n    } catch (error) {\n      console.log('failed to request API: ', error)\n    }\n  }\n\n  // list Blog\n\n  useEffect(() => {\n    const getBlog = async () => {\n      try {\n        const { data } = await apiBlog.getAll();\n        setBlog(data);\n      } catch (error) {\n        console.log('failed to request API: ', error)\n      }\n    }\n    getBlog();\n  }, []);\n\n  // add Blog\n\n  const AddNewBlog = async (newBlog) => {\n    try {\n      const { data } = await apiBlog.create(newBlog);\n      const blogNew = {\n        id: data.id,\n        title: data.title,\n        image: data.image,\n        by: data.by,\n        short_desc: data.short_desc,\n        content: data.content\n      }\n      setBlog([\n        ...data\n      ])\n    } catch (error) {\n      console.log('failed to request API: ', error)\n    }\n\n  }\n  // List categories\n  useEffect(() => {\n    const getCategories = async () => {\n      try {\n        const { data } = await apiCategories.getAll();\n        setCategories(data);\n      } catch (error) {\n        console.log('failed to request API: ', error)\n      }\n    }\n    getCategories();\n  }, []);\n  // Thêm Danh Mục\n  const onHandleAddCategory = async (category) => {\n    try {\n      const { data } = await apiCategories.create(category);\n      const obj = {\n        id: data.id,\n        name: data.name,\n        description: data.description,\n        show_menu: data.show_menu\n      };\n      setCategories([\n        ...categories,\n        obj\n      ])\n    } catch (error) {\n      console.log('failed to request API: ', error)\n    }\n  }\n  // Xóa danh mục\n  const onHandleRemoveCate = async (id) => {\n    try {\n      const { data } = await apiCategories.remove(id);\n      console.log(categories);\n      console.log(\"new\")\n      const newCategories = categories.filter(category => category.id !== id);\n      setCategories(newCategories);\n      console.log(newCategories);\n    } catch (error) {\n      console.log('failed to request API: ', error)\n    }\n\n  }\n  // Cập nhật danh mục \n  const onHandleUpdateCate = (id, updateCategory) => {\n    const newCategories = categories.map(category => (\n      category.id == id ? updateCategory : category\n    ));\n    apiCategories.update(id, updateCategory);\n    setCategories(newCategories);\n  }\n  // Danh sách sản phẩm\n  useEffect(() => {\n    const getProducts = async () => {\n      try {\n        const { data } = await apiProducts.getAll();\n        setProducts(data);\n      } catch (error) {\n        console.log('failed to request API: ', error)\n      }\n    }\n    getProducts();\n  }, []);\n\n\n  // Xóa sản phẩm\n  const onHandleRemove = async (id) => {\n    try {\n      const { data } = await apiProducts.remove(id);\n      console.log(id);\n      const newProducts = products.filter(product => product.id !== id);\n      console.log(newProducts);\n      setProducts(newProducts);\n      console.log(\"new\");\n      console.log(products);\n    } catch (error) {\n      console.log('failed to request API: ', error)\n    }\n\n  }\n  // Thêm sản phẩm\n  const onHandleAdd = async (product) => {\n    try {\n      const { data } = await apiProducts.create(product);\n      const obj = {\n        id: data.id,\n        name: data.name,\n        cate_id: data.cate_id,\n        image: data.image,\n        short_desc: data.short_desc,\n        price: data.price,\n        price_sale: data.price_sale,\n        status: data.status,\n        detail: data.detail\n      };\n      setProducts([\n        ...products,\n        obj\n      ])\n    } catch (error) {\n      console.log('failed to request API: ', error)\n    }\n  }\n\n\n  // Cập nhật product \n  const onHandleUpdate = (id, updateProduct) => {\n    const newProducts = products.map(product => (\n      product.id == id ? updateProduct : product\n    ));\n    apiProducts.update(id, updateProduct);\n    setProducts(newProducts);\n  }\n\n  // addToCart\n  const AddToCart = (id, quantity = 1) => {\n    const check = cart.every((item) => {\n      return item.id !== id;\n    });\n    if (check) {\n      const dataCart = products.find(product => product.id == id);\n      dataCart.quantity = quantity\n      const newCart = [...cart, dataCart];\n      setCart(newCart);\n      swal(\"Thông Báo\", \"Thêm Sản Phẩm Vào Giỏ Hàng Thành Công!\", \"success\");\n      localStorage[\"shopping-cart-items\"] = JSON.stringify(newCart);\n    } else {\n      cart.forEach((element) => {\n        if (element.id == id) {\n          element.quantity++;\n        }\n      });\n      setCart(cart);\n      swal(\"Thông Báo\", \"Cộng Thêm Số Lượng Sản Phẩm Vào Giỏ Hàng Thành Công!\", \"success\");\n      localStorage[\"shopping-cart-items\"] = JSON.stringify(cart);\n    }\n  }\n  // list Cart\n  useEffect(() => {\n    let shoppingCartItems = [];\n    if (localStorage[\"shopping-cart-items\"] != null) {\n      shoppingCartItems = JSON.parse(\n        localStorage[\"shopping-cart-items\"].toString()\n      );\n    }\n    setCart(shoppingCartItems);\n  }, []);\n\n  // Xóa Cart \n  const RemoveCart = (id) => {\n    cart.forEach((element, index) => {\n      if (element.id == id) {\n        cart.splice(index, 1)\n      }\n    });\n    setCart([...cart]);\n    swal(\"Thông Báo\", \"Xóa Sản Phẩm Khỏi Giỏ Hàng Thành Công!\", \"success\");\n    localStorage[\"shopping-cart-items\"] = JSON.stringify(cart);\n  }\n  // updateCart\n  const onUpcart = (id) => {\n    cart.forEach((item) => {\n      if (item.id == id) {\n        item.quantity++;\n      }\n    })\n    setCart([...cart]);\n    localStorage[\"shopping-cart-items\"] = JSON.stringify(cart);\n  }\n  const onDownUpdate = (id) => {\n    cart.forEach((item) => {\n      if (item.quantity == 1) {\n      } else if (item.id == id) {\n        item.quantity--;\n      }\n    })\n    setCart([...cart]);\n    localStorage[\"shopping-cart-items\"] = JSON.stringify(cart);\n  }\n  return (\n    <div className=\"App\">\n      <Routers\n        // products\n        products={products}\n        onRemove={onHandleRemove}\n        onAdd={onHandleAdd}\n        onUpdate={onHandleUpdate}\n        // categories\n        categories={categories}\n        onAddCate={onHandleAddCategory}\n        onRemoveCate={onHandleRemoveCate}\n        onUpdateCate={onHandleUpdateCate}\n        AddCart={AddToCart}\n        dataCart={cart}\n        RemoveCart={RemoveCart}\n        onHandleDown={onDownUpdate}\n        onHandleUp={onUpcart}\n        blog={blog}\n        contact={contact}\n        onRemoveContact={onRemoveContact}\n        onAddBlog={AddNewBlog}\n      />\n    </div>\n  )\n\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}