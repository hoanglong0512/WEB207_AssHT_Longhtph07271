{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\ReactJs\\\\longhtph07271_Project\\\\src\\\\pages\\\\views\\\\Admin\\\\EditFormProduct\\\\index.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useForm } from \"react-hook-form\";\nimport { useParams, useHistory } from 'react-router-dom';\nimport swal from 'sweetalert';\n\nconst EditFormProduct = ({\n  products,\n  onUpdate\n}) => {\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  let {\n    id\n  } = useParams();\n  let history = useHistory();\n  const product = products.find(product => product.id === id);\n  const [currentProduct, setCurrentProduct] = useState(product);\n\n  const onHandleSubmit = data => {\n    onUpdate(id, currentProduct);\n    history.push('/admin/products');\n    swal(\"Thông Báo\", \"Sửa Sản Phẩm Thành Công!\", \"success\");\n  };\n\n  const onHandleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCurrentProduct({ ...currentProduct,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"h3 mb-2 text-gray-800\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, \"S\\u1EEDa S\\u1EA3n Ph\\u1EA9m\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card shadow mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  })));\n};\n\nEditFormProduct.propTypes = {\n  products: PropTypes.array\n};\nexport default EditFormProduct;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/ReactJs/longhtph07271_Project/src/pages/views/Admin/EditFormProduct/index.js"],"names":["React","useState","PropTypes","useForm","useParams","useHistory","swal","EditFormProduct","products","onUpdate","register","handleSubmit","errors","id","history","product","find","currentProduct","setCurrentProduct","onHandleSubmit","data","push","onHandleChange","e","name","value","target","propTypes","array"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,kBAAtC;AACA,OAAOC,IAAP,MAAiB,YAAjB;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA4B;AAChD,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA;AAA1B,MAAqCT,OAAO,EAAlD;AACA,MAAI;AAAEU,IAAAA;AAAF,MAAST,SAAS,EAAtB;AACA,MAAIU,OAAO,GAAGT,UAAU,EAAxB;AACA,QAAMU,OAAO,GAAGP,QAAQ,CAACQ,IAAT,CAAcD,OAAO,IAAIA,OAAO,CAACF,EAAR,KAAeA,EAAxC,CAAhB;AAEA,QAAM,CAACI,cAAD,EAAiBC,iBAAjB,IAAsCjB,QAAQ,CAACc,OAAD,CAApD;;AAEA,QAAMI,cAAc,GAAIC,IAAD,IAAU;AAE7BX,IAAAA,QAAQ,CAACI,EAAD,EAAKI,cAAL,CAAR;AACAH,IAAAA,OAAO,CAACO,IAAR,CAAa,iBAAb;AACAf,IAAAA,IAAI,CAAC,WAAD,EAAc,0BAAd,EAA0C,SAA1C,CAAJ;AACH,GALD;;AAMA,QAAMgB,cAAc,GAAGC,CAAC,IAAI;AACxB,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACAR,IAAAA,iBAAiB,CAAC,EACd,GAAGD,cADW;AAEd,OAACO,IAAD,GAAQC;AAFM,KAAD,CAAjB;AAIH,GAND;;AAOA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,uBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADJ,eAEI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,CADJ;AAwDH,CA7ED;;AA+EAlB,eAAe,CAACoB,SAAhB,GAA4B;AACxBnB,EAAAA,QAAQ,EAAEN,SAAS,CAAC0B;AADI,CAA5B;AAIA,eAAerB,eAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport swal from 'sweetalert';\r\n\r\nconst EditFormProduct = ({ products, onUpdate }) => {\r\n    const { register, handleSubmit, errors } = useForm();\r\n    let { id } = useParams();\r\n    let history = useHistory();\r\n    const product = products.find(product => product.id === id);\r\n\r\n    const [currentProduct, setCurrentProduct] = useState(product);\r\n\r\n    const onHandleSubmit = (data) => {\r\n\r\n        onUpdate(id, currentProduct);\r\n        history.push('/admin/products');\r\n        swal(\"Thông Báo\", \"Sửa Sản Phẩm Thành Công!\", \"success\");\r\n    }\r\n    const onHandleChange = e => {\r\n        const { name, value } = e.target;\r\n        setCurrentProduct({\r\n            ...currentProduct,\r\n            [name]: value\r\n        })\r\n    }\r\n    return (\r\n        <div>\r\n            <h1 className=\"h3 mb-2 text-gray-800\">Sửa Sản Phẩm</h1>\r\n            <div className=\"card shadow mb-4\">\r\n                <div className=\"card-body\">\r\n                    {/* <form action=\"\" onSubmit={handleSubmit(onHandleSubmit)} enctype=\"multipart/form-data\">\r\n                        <div className=\"form-group\">\r\n\r\n                            <label htmlFor=\"inputProductName\">Tên Sản Phẩm</label>\r\n                            <input type=\"text\" name=\"name\" onChange={onHandleChange} className=\"form-control\"\r\n                                ref={register({ required: true, minLength: 5 })}\r\n                                id=\"inputProductName\"\r\n                                defaultValue={currentProduct.name}\r\n                            />\r\n                            {errors.name && <span class=\"text-danger\">Không Được Bỏ Trống !!!</span>}\r\n                        </div>\r\n                        <div className=\"form-group mb-4\">\r\n                            <label>Danh Mục</label>\r\n                            <select name=\"categories\" className=\"form-control\" ref={register({ required: true })}>\r\n                                <option selected disabled value=\"0\">Mời Chọn...</option>\r\n                                <option value=\"1\">Yes</option>\r\n                                <option value=\"0\">No</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-4 offset-4\">\r\n                                    <img src={currentProduct.image} width=\"200\" className=\"rounded\" />\r\n                                </div>\r\n                            </div>\r\n                            <label htmlFor=\"inputProductName\">Ảnh Sản Phẩm</label>\r\n                            <input type=\"text\" name=\"image\" onChange={onHandleChange} className=\"form-control\" id=\"inputProductImage\"\r\n                                defaultValue={currentProduct.image}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"inputProductName\">Giá Sản Phẩm</label>\r\n                            <input type=\"number\" name=\"price\" onChange={onHandleChange} className=\"form-control\"\r\n                                ref={register({ required: true, maxLength: 99 })}\r\n                                id=\"inputProductPrice\"\r\n                                defaultValue={currentProduct.price}\r\n                            />\r\n                            {errors.price && <span class=\"text-danger\">Không Được Bỏ Trống !!!</span>}\r\n                        </div>\r\n                        <button type=\"submit\" class=\"btn btn-outline-primary mr-2\">Submit</button>\r\n                        <a href=\"/admin/Products\" class=\"border-1 btn-transition btn btn-outline-danger \">\r\n                            Hủy\r\n                            </a>\r\n                    </form> */}\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nEditFormProduct.propTypes = {\r\n    products: PropTypes.array\r\n}\r\n\r\nexport default EditFormProduct\r\n"]},"metadata":{},"sourceType":"module"}