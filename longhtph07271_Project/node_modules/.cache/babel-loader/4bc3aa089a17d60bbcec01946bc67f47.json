{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\ReactJs\\\\longhtph07271_Project\\\\src\\\\pages\\\\views\\\\Admin\\\\EditFormCategory\\\\index.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useForm } from \"react-hook-form\";\nimport { useHistory, useParams } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport Categories from '../Categories';\n\nconst EditFormCategory = ({\n  categories,\n  onUpdateCate\n}) => {\n  let {\n    id\n  } = useParams();\n  const {\n    handleSubmit,\n    register,\n    errors\n  } = useForm();\n  let history = useHistory();\n  const category = categories.find(category => category.id === id);\n  console.log(categories);\n  const [currentCategory, setCurrentCategory] = useState(category);\n\n  const onHandleSubmit = data => {\n    onUpdateCate(id, currentCategory);\n    history.push('/admin/categories');\n    swal(\"Thông Báo\", \"Sửa Sản Phẩm Thành Công!\", \"success\");\n  };\n\n  const onHandleChange = e => {\n    const {\n      name,\n      value\n    } = e.target; //console.log(name, value);\n\n    setCurrentCategory({ ...currentCategory,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"h3 mb-2 text-gray-800\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, \"S\\u1EEDa Danh M\\u1EE5c\"));\n};\n\nEditFormCategory.propTypes = {};\nexport default EditFormCategory;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/ReactJs/longhtph07271_Project/src/pages/views/Admin/EditFormCategory/index.js"],"names":["React","useState","PropTypes","useForm","useHistory","useParams","swal","Categories","EditFormCategory","categories","onUpdateCate","id","handleSubmit","register","errors","history","category","find","console","log","currentCategory","setCurrentCategory","onHandleSubmit","data","push","onHandleChange","e","name","value","target","propTypes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,kBAAtC;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,UAAP,MAAuB,eAAvB;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAD,KAAkC;AACvD,MAAI;AAAEC,IAAAA;AAAF,MAASN,SAAS,EAAtB;AACA,QAAM;AAAEO,IAAAA,YAAF;AAAgBC,IAAAA,QAAhB;AAA0BC,IAAAA;AAA1B,MAAqCX,OAAO,EAAlD;AACA,MAAIY,OAAO,GAAGX,UAAU,EAAxB;AACA,QAAMY,QAAQ,GAAGP,UAAU,CAACQ,IAAX,CAAgBD,QAAQ,IAAIA,QAAQ,CAACL,EAAT,KAAgBA,EAA5C,CAAjB;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYV,UAAZ;AACA,QAAM,CAACW,eAAD,EAAkBC,kBAAlB,IAAwCpB,QAAQ,CAACe,QAAD,CAAtD;;AAEA,QAAMM,cAAc,GAAIC,IAAD,IAAU;AAC7Bb,IAAAA,YAAY,CAACC,EAAD,EAAKS,eAAL,CAAZ;AACAL,IAAAA,OAAO,CAACS,IAAR,CAAa,mBAAb;AACAlB,IAAAA,IAAI,CAAC,WAAD,EAAc,0BAAd,EAA0C,SAA1C,CAAJ;AACH,GAJD;;AAKA,QAAMmB,cAAc,GAAGC,CAAC,IAAI;AACxB,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B,CADwB,CAExB;;AACAR,IAAAA,kBAAkB,CAAC,EACf,GAAGD,eADY;AAEf,OAACO,IAAD,GAAQC;AAFO,KAAD,CAAlB;AAIH,GAPD;;AAQA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,uBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,CADJ;AA6CH,CAlED;;AAoEApB,gBAAgB,CAACsB,SAAjB,GAA6B,EAA7B;AAIA,eAAetB,gBAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport swal from 'sweetalert';\r\nimport Categories from '../Categories';\r\n\r\nconst EditFormCategory = ({ categories, onUpdateCate }) => {\r\n    let { id } = useParams();\r\n    const { handleSubmit, register, errors } = useForm();\r\n    let history = useHistory();\r\n    const category = categories.find(category => category.id === id);\r\n    console.log(categories);\r\n    const [currentCategory, setCurrentCategory] = useState(category);\r\n\r\n    const onHandleSubmit = (data) => {\r\n        onUpdateCate(id, currentCategory);\r\n        history.push('/admin/categories');\r\n        swal(\"Thông Báo\", \"Sửa Sản Phẩm Thành Công!\", \"success\");\r\n    }\r\n    const onHandleChange = e => {\r\n        const { name, value } = e.target;\r\n        //console.log(name, value);\r\n        setCurrentCategory({\r\n            ...currentCategory,\r\n            [name]: value\r\n        })\r\n    }\r\n    return (\r\n        <div>\r\n            <h1 className=\"h3 mb-2 text-gray-800\">Sửa Danh Mục</h1>\r\n            {/* DataTales Example */}\r\n            {/* <div className=\"card shadow mb-4\">\r\n                <div className=\"card-body\">\r\n                    <form action=\"\" onSubmit={handleSubmit(onHandleSubmit)} >\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"Name\">Tên Danh Mục</label>\r\n                            <input type=\"text\" name=\"name\" className=\"form-control\"\r\n                                ref={register({ required: true, minLength: 5 })}\r\n                                id=\"inputName\"\r\n                                onChange={onHandleChange}\r\n                                defaultValue={currentCategory.name}\r\n                            />\r\n                            {errors.name && errors.name.type === \"required\" && <span class=\"text-danger\">Không được bỏ trống</span>}\r\n                            {errors.name && errors.name.type === \"minLength\" && <span class=\"text-danger\">Phải trên 5 ký tự</span>}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"inputDesc\">Description</label>\r\n                            <textarea name=\"description\" id=\"ta-1\" style={{ width: '100%' }} rows=\"30\"\r\n                                ref={register({ required: true })}\r\n                                onChange={onHandleChange}\r\n                                defaultValue={currentCategory.description} >\r\n                            </textarea>\r\n                            {errors.description && errors.description.type === \"required\" && <span class=\"text-danger\">Không được bỏ trống</span>}\r\n                        </div>\r\n                        <div className=\"form-group mb-4\">\r\n                            <label>Show Menu</label>\r\n                            <select name=\"show_menu\" onChange={onHandleChange} className=\"form-control\" ref={register({ required: true })}>\r\n                                <option selected disabled value=\"0\">Mời Chọn...</option>\r\n                                <option value=\"1\">Yes</option>\r\n                                <option value=\"0\">No</option>\r\n                            </select>\r\n                        </div>\r\n                        <button type=\"submit\" class=\"btn btn-outline-primary mr-2\">Submit</button>\r\n                        <a href=\"/admin/categories\" class=\"border-1 btn-transition btn btn-outline-danger \">\r\n                            Hủy\r\n                        </a>\r\n                    </form>\r\n                </div>\r\n            </div> */}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nEditFormCategory.propTypes = {\r\n\r\n}\r\n\r\nexport default EditFormCategory\r\n"]},"metadata":{},"sourceType":"module"}