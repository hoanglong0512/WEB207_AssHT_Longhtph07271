{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\ReactJs\\\\longhtph07271_Project\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Routers from './routers';\nimport apiProducts from './api/productApi';\nimport apiCategories from './api/categoriesApi';\nimport swal from 'sweetalert';\n\nfunction App() {\n  // admin\n  const [products, setProducts] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [blog, setBlog] = useState([]); // client\n\n  const [cart, setCart] = useState([]); // List categories\n\n  useEffect(() => {\n    const getCategories = async () => {\n      try {\n        const {\n          data\n        } = await apiCategories.getAll();\n        setCategories(data);\n      } catch (error) {\n        console.log('failed to request API: ', error);\n      }\n    };\n\n    getCategories();\n  }, []); // Thêm Danh Mục\n\n  const onHandleAddCategory = async category => {\n    try {\n      const {\n        data\n      } = await apiCategories.create(category);\n      const obj = {\n        id: data.id,\n        name: data.name,\n        description: data.description,\n        show_menu: data.show_menu\n      };\n      setCategories([...categories, obj]);\n    } catch (error) {\n      console.log('failed to request API: ', error);\n    }\n  }; // Xóa danh mục\n\n\n  const onHandleRemoveCate = async id => {\n    try {\n      const {\n        data\n      } = await apiCategories.remove(id);\n      console.log(categories);\n      console.log(\"new\");\n      const newCategories = categories.filter(category => category.id !== id);\n      setCategories(newCategories);\n      console.log(newCategories);\n    } catch (error) {\n      console.log('failed to request API: ', error);\n    }\n  }; // Cập nhật danh mục \n\n\n  const onHandleUpdateCate = (id, updateCategory) => {\n    const newCategories = categories.map(category => category.id == id ? updateCategory : category);\n    apiCategories.update(id, updateCategory);\n    setCategories(newCategories);\n  }; // Danh sách sản phẩm\n\n\n  useEffect(() => {\n    const getProducts = async () => {\n      try {\n        const {\n          data\n        } = await apiProducts.getAll();\n        setProducts(data);\n      } catch (error) {\n        console.log('failed to request API: ', error);\n      }\n    };\n\n    getProducts();\n  }, []); // Xóa sản phẩm\n\n  const onHandleRemove = async id => {\n    try {\n      const {\n        data\n      } = await apiProducts.remove(id);\n      console.log(id);\n      const newProducts = products.filter(product => product.id !== id);\n      console.log(newProducts);\n      setProducts(newProducts);\n      console.log(\"new\");\n      console.log(products);\n    } catch (error) {\n      console.log('failed to request API: ', error);\n    }\n  }; // Thêm sản phẩm\n\n\n  const onHandleAdd = async product => {\n    try {\n      const {\n        data\n      } = await apiProducts.create(product);\n      const obj = {\n        id: data.id,\n        name: data.name,\n        cate_id: data.cate_id,\n        image: data.image,\n        short_desc: data.short_desc,\n        price: data.price,\n        price_sale: data.price_sale,\n        status: data.status,\n        detail: data.detail\n      };\n      setProducts([...products, obj]);\n    } catch (error) {\n      console.log('failed to request API: ', error);\n    }\n  }; // Cập nhật product \n\n\n  const onHandleUpdate = (id, updateProduct) => {\n    const newProducts = products.map(product => product.id == id ? updateProduct : product);\n    apiProducts.update(id, updateProduct);\n    setProducts(newProducts);\n  }; // addToCart\n\n\n  const AddToCart = (id, quantity = 1) => {\n    const check = cart.every(item => {\n      return item.id !== id;\n    });\n\n    if (check) {\n      const dataCart = products.find(product => product.id == id);\n      dataCart.quantity = quantity;\n      const newCart = [...cart, dataCart];\n      setCart(newCart);\n      swal(\"Thông Báo\", \"Thêm Sản Phẩm Vào Giỏ Hàng Thành Công!\", \"success\");\n      localStorage[\"shopping-cart-items\"] = JSON.stringify(newCart);\n    } else {\n      cart.forEach(element => {\n        if (element.id == id) {\n          element.quantity++;\n        }\n      });\n      setCart(cart);\n      swal(\"Thông Báo\", \"Cộng Thêm Số Lượng Sản Phẩm Vào Giỏ Hàng Thành Công!\", \"success\");\n      localStorage[\"shopping-cart-items\"] = JSON.stringify(cart);\n    }\n  }; // list Cart\n\n\n  useEffect(() => {\n    let shoppingCartItems = [];\n\n    if (localStorage[\"shopping-cart-items\"] != null) {\n      shoppingCartItems = JSON.parse(localStorage[\"shopping-cart-items\"].toString());\n    }\n\n    setCart(shoppingCartItems);\n  }, []); // Xóa Cart \n\n  const RemoveCart = id => {\n    cart.forEach((element, index) => {\n      if (element.id == id) {\n        cart.splice(index, 1);\n      }\n    });\n    setCart([...cart]);\n    swal(\"Thông Báo\", \"Xóa Sản Phẩm Khỏi Giỏ Hàng Thành Công!\", \"success\");\n    localStorage[\"shopping-cart-items\"] = JSON.stringify(cart);\n  }; // updateCart\n\n\n  const onUpcart = id => {\n    cart.forEach(item => {\n      if (item.id == id) {\n        item.quantity++;\n      }\n    });\n    setCart([...cart]);\n    localStorage[\"shopping-cart-items\"] = JSON.stringify(cart);\n  };\n\n  const onDownUpdate = id => {\n    cart.forEach(item => {\n      if (item.quantity == 1) {} else if (item.id == id) {\n        item.quantity--;\n      }\n    });\n    setCart([...cart]);\n    localStorage[\"shopping-cart-items\"] = JSON.stringify(cart);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Routers // products\n  , {\n    products: products,\n    onRemove: onHandleRemove,\n    onAdd: onHandleAdd,\n    onUpdate: onHandleUpdate // categories\n    ,\n    categories: categories,\n    onAddCate: onHandleAddCategory,\n    onRemoveCate: onHandleRemoveCate,\n    onUpdateCate: onHandleUpdateCate,\n    AddCart: AddToCart,\n    dataCart: cart,\n    RemoveCart: RemoveCart,\n    onHandleDown: onDownUpdate,\n    onHandleUp: onUpcart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/ReactJs/longhtph07271_Project/src/App.js"],"names":["React","useState","useEffect","Routers","apiProducts","apiCategories","swal","App","products","setProducts","categories","setCategories","blog","setBlog","cart","setCart","getCategories","data","getAll","error","console","log","onHandleAddCategory","category","create","obj","id","name","description","show_menu","onHandleRemoveCate","remove","newCategories","filter","onHandleUpdateCate","updateCategory","map","update","getProducts","onHandleRemove","newProducts","product","onHandleAdd","cate_id","image","short_desc","price","price_sale","status","detail","onHandleUpdate","updateProduct","AddToCart","quantity","check","every","item","dataCart","find","newCart","localStorage","JSON","stringify","forEach","element","shoppingCartItems","parse","toString","RemoveCart","index","splice","onUpcart","onDownUpdate"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Routers from './routers';\nimport apiProducts from './api/productApi';\nimport apiCategories from './api/categoriesApi';\nimport swal from 'sweetalert';\nfunction App() {\n  // admin\n  const [products, setProducts] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [blog, setBlog] = useState([])\n  // client\n  const [cart, setCart] = useState([]);\n\n\n\n  // List categories\n  useEffect(() => {\n    const getCategories = async () => {\n      try {\n        const { data } = await apiCategories.getAll();\n        setCategories(data);\n      } catch (error) {\n        console.log('failed to request API: ', error)\n      }\n    }\n    getCategories();\n  }, []);\n  // Thêm Danh Mục\n  const onHandleAddCategory = async (category) => {\n    try {\n      const { data } = await apiCategories.create(category);\n      const obj = {\n        id: data.id,\n        name: data.name,\n        description: data.description,\n        show_menu: data.show_menu\n      };\n      setCategories([\n        ...categories,\n        obj\n      ])\n    } catch (error) {\n      console.log('failed to request API: ', error)\n    }\n  }\n  // Xóa danh mục\n  const onHandleRemoveCate = async (id) => {\n    try {\n      const { data } = await apiCategories.remove(id);\n      console.log(categories);\n      console.log(\"new\")\n      const newCategories = categories.filter(category => category.id !== id);\n      setCategories(newCategories);\n      console.log(newCategories);\n    } catch (error) {\n      console.log('failed to request API: ', error)\n    }\n\n  }\n  // Cập nhật danh mục \n  const onHandleUpdateCate = (id, updateCategory) => {\n    const newCategories = categories.map(category => (\n      category.id == id ? updateCategory : category\n    ));\n    apiCategories.update(id, updateCategory);\n    setCategories(newCategories);\n  }\n  // Danh sách sản phẩm\n  useEffect(() => {\n    const getProducts = async () => {\n      try {\n        const { data } = await apiProducts.getAll();\n        setProducts(data);\n      } catch (error) {\n        console.log('failed to request API: ', error)\n      }\n    }\n    getProducts();\n  }, []);\n\n\n  // Xóa sản phẩm\n  const onHandleRemove = async (id) => {\n    try {\n      const { data } = await apiProducts.remove(id);\n      console.log(id);\n      const newProducts = products.filter(product => product.id !== id);\n      console.log(newProducts);\n      setProducts(newProducts);\n      console.log(\"new\");\n      console.log(products);\n    } catch (error) {\n      console.log('failed to request API: ', error)\n    }\n\n  }\n  // Thêm sản phẩm\n  const onHandleAdd = async (product) => {\n    try {\n      const { data } = await apiProducts.create(product);\n      const obj = {\n        id: data.id,\n        name: data.name,\n        cate_id: data.cate_id,\n        image: data.image,\n        short_desc: data.short_desc,\n        price: data.price,\n        price_sale: data.price_sale,\n        status: data.status,\n        detail: data.detail\n      };\n      setProducts([\n        ...products,\n        obj\n      ])\n    } catch (error) {\n      console.log('failed to request API: ', error)\n    }\n  }\n\n\n  // Cập nhật product \n  const onHandleUpdate = (id, updateProduct) => {\n    const newProducts = products.map(product => (\n      product.id == id ? updateProduct : product\n    ));\n    apiProducts.update(id, updateProduct);\n    setProducts(newProducts);\n  }\n\n  // addToCart\n  const AddToCart = (id, quantity = 1) => {\n    const check = cart.every((item) => {\n      return item.id !== id;\n    });\n    if (check) {\n      const dataCart = products.find(product => product.id == id);\n      dataCart.quantity = quantity\n      const newCart = [...cart, dataCart];\n      setCart(newCart);\n      swal(\"Thông Báo\", \"Thêm Sản Phẩm Vào Giỏ Hàng Thành Công!\", \"success\");\n      localStorage[\"shopping-cart-items\"] = JSON.stringify(newCart);\n    } else {\n      cart.forEach((element) => {\n        if (element.id == id) {\n          element.quantity++;\n        }\n      });\n      setCart(cart);\n      swal(\"Thông Báo\", \"Cộng Thêm Số Lượng Sản Phẩm Vào Giỏ Hàng Thành Công!\", \"success\");\n      localStorage[\"shopping-cart-items\"] = JSON.stringify(cart);\n    }\n  }\n  // list Cart\n  useEffect(() => {\n    let shoppingCartItems = [];\n    if (localStorage[\"shopping-cart-items\"] != null) {\n      shoppingCartItems = JSON.parse(\n        localStorage[\"shopping-cart-items\"].toString()\n      );\n    }\n    setCart(shoppingCartItems);\n  }, []);\n\n  // Xóa Cart \n  const RemoveCart = (id) => {\n    cart.forEach((element, index) => {\n      if (element.id == id) {\n        cart.splice(index, 1)\n      }\n    });\n    setCart([...cart]);\n    swal(\"Thông Báo\", \"Xóa Sản Phẩm Khỏi Giỏ Hàng Thành Công!\", \"success\");\n    localStorage[\"shopping-cart-items\"] = JSON.stringify(cart);\n  }\n  // updateCart\n  const onUpcart = (id) => {\n    cart.forEach((item) => {\n      if (item.id == id) {\n        item.quantity++;\n      }\n    })\n    setCart([...cart]);\n    localStorage[\"shopping-cart-items\"] = JSON.stringify(cart);\n  }\n  const onDownUpdate = (id) => {\n    cart.forEach((item) => {\n      if (item.quantity == 1) {\n      } else if (item.id == id) {\n        item.quantity--;\n      }\n    })\n    setCart([...cart]);\n    localStorage[\"shopping-cart-items\"] = JSON.stringify(cart);\n  }\n  return (\n    <div className=\"App\">\n      <Routers\n        // products\n        products={products}\n        onRemove={onHandleRemove}\n        onAdd={onHandleAdd}\n        onUpdate={onHandleUpdate}\n        // categories\n        categories={categories}\n        onAddCate={onHandleAddCategory}\n        onRemoveCate={onHandleRemoveCate}\n        onUpdateCate={onHandleUpdateCate}\n        AddCart={AddToCart}\n        dataCart={cart}\n        RemoveCart={RemoveCart}\n        onHandleDown={onDownUpdate}\n        onHandleUp={onUpcart}\n      />\n    </div>\n  )\n\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}